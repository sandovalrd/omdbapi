{"ast":null,"code":"var _jsxFileName = \"/home/sandovalrd/React project/groupon/src/components/MovieDetail.js\";\nimport React from \"react\";\nimport \"./movies.css\";\nimport { connect } from \"react-redux\";\nimport { fetchMovieDetail } from \"../actions\";\n\nclass MovieDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: []\n    };\n\n    this.loadLocalStorage = () => {\n      // Se cargan todas las llaves que existan en localStorage\n      for (let key in this.state) {\n        if (localStorage.hasOwnProperty(key)) {\n          let value = localStorage.getItem(key);\n\n          try {\n            value = JSON.parse(value);\n            this.setState({\n              [key]: value\n            });\n          } catch (e) {\n            this.setState({\n              [key]: value\n            });\n          }\n        }\n      }\n    };\n\n    this.onAddNewFavorite = () => {\n      const newItem = {\n        id: this.props.movie.imdbID,\n        title: this.props.movie.Title,\n        poster: this.props.movie.Poster,\n        year: this.props.movie.Year\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n      this.setState({\n        list\n      });\n      localStorage.setItem(\"list\", JSON.stringify(list));\n    };\n\n    this.onDeleteFavorite = id => {\n      const list = [...this.state.list];\n      const updatedList = list.filter(item => item.id !== id);\n      this.setState({\n        list: updatedList\n      });\n      localStorage.setItem(\"list\", JSON.stringify(updatedList));\n    };\n\n    this.onFavoriteClick = () => {\n      const favoriteActive = this.getFavorite();\n\n      if (favoriteActive) {\n        this.onDeleteFavorite(this.props.movie.imdbID);\n      } else {\n        this.onAddNewFavorite();\n      }\n    };\n\n    this.getFavorite = () => {\n      window.localStorage.clear();\n      const list = JSON.parse(localStorage.getItem(\"list\"));\n      console.log(list);\n      const imdbID = this.props.movie.imdbID;\n\n      if (list) {\n        const favorite = list.some(item => item.id === imdbID);\n\n        if (favorite) {\n          return \"active\";\n        }\n      }\n\n      return \"false\";\n    };\n  }\n\n  componentDidMount() {\n    this.loadLocalStorage();\n  }\n\n  render() {\n    const favoriteActive = this.getFavorite();\n    return React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"four wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"ui Large image\",\n      src: this.props.movie.Poster,\n      alt: this.props.movie.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ten wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Title: \"), \" \", this.props.movie.Title), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Year:\"), \" \", this.props.movie.Year), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Director:\"), \" \", this.props.movie.Director), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Production:\"), \" \", this.props.movie.Production), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Genre:\"), \" \", this.props.movie.Genre), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Language:\"), \" \", this.props.movie.Language), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"BoxOffice:\"), \" \", this.props.movie.BoxOffice), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Plot:\"), \" \", this.props.movie.Plot), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Runtime:\"), \" \", this.props.movie.Runtime), React.createElement(\"div\", {\n      className: \"extra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Favorite: \"), React.createElement(\"i\", {\n      className: \"favorite icon \".concat(favoriteActive),\n      onClick: this.onFavoriteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  movie\n}) => {\n  return {\n    movie: movie.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovieDetail\n})(MovieDetail);","map":{"version":3,"sources":["/home/sandovalrd/React project/groupon/src/components/MovieDetail.js"],"names":["React","connect","fetchMovieDetail","MovieDetail","Component","state","list","loadLocalStorage","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","onAddNewFavorite","newItem","id","props","movie","imdbID","title","Title","poster","Poster","year","Year","push","setItem","stringify","onDeleteFavorite","updatedList","filter","item","onFavoriteClick","favoriteActive","getFavorite","window","clear","console","log","favorite","some","componentDidMount","render","Director","Production","Genre","Language","BoxOffice","Plot","Runtime","mapStateToProps","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./movies.css\";\nimport { connect } from \"react-redux\";\nimport { fetchMovieDetail } from \"../actions\";\n\nclass MovieDetail extends React.Component {\n  state = { list: [] };\n\n  componentDidMount() {\n    this.loadLocalStorage();\n  }\n\n  loadLocalStorage = () => {\n    // Se cargan todas las llaves que existan en localStorage\n    for (let key in this.state) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  };\n\n  onAddNewFavorite = () => {\n    const newItem = {\n      id: this.props.movie.imdbID,\n      title: this.props.movie.Title,\n      poster: this.props.movie.Poster,\n      year: this.props.movie.Year\n    };\n    const list = [...this.state.list];\n    list.push(newItem);\n    this.setState({ list });\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  };\n\n  onDeleteFavorite = id => {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({ list: updatedList });\n    localStorage.setItem(\"list\", JSON.stringify(updatedList));\n  };\n\n  onFavoriteClick = () => {\n    const favoriteActive = this.getFavorite();\n    if (favoriteActive) {\n      this.onDeleteFavorite(this.props.movie.imdbID);\n    } else {\n      this.onAddNewFavorite();\n    }\n  };\n\n  // const fetchAlbmus = async () => {\n  //   const res = await fetch(\"https://rallycoding.herokuapp.com/api/music_albums\");\n  //   const json = await res.json();\n  //   console.log(json);\n  // };\n\n  // getListFavorites = () => {\n  //   const list = window.localStorage.getItem(\"list\");\n  //   return list;\n  // };\n\n  getFavorite = () => {\n    window.localStorage.clear();\n    const list = JSON.parse(localStorage.getItem(\"list\"));\n    console.log(list);\n    const { imdbID } = this.props.movie;\n    if (list) {\n      const favorite = list.some(item => item.id === imdbID);\n      if (favorite) {\n        return \"active\";\n      }\n    }\n    return \"false\";\n  };\n\n  render() {\n    const favoriteActive = this.getFavorite();\n    return (\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"four wide column\">\n            <img\n              className=\"ui Large image\"\n              src={this.props.movie.Poster}\n              alt={this.props.movie.imdbID}\n            />\n          </div>\n          <div className=\"ten wide column\">\n            <div className=\"content items\">\n              <div className=\"extra\">\n                <b>Title: </b> {this.props.movie.Title}\n              </div>\n              <div className=\"extra\">\n                <b>Year:</b> {this.props.movie.Year}\n              </div>\n              <div className=\"extra\">\n                <b>Director:</b> {this.props.movie.Director}\n              </div>\n              <div className=\"extra\">\n                <b>Production:</b> {this.props.movie.Production}\n              </div>\n              <div className=\"extra\">\n                <b>Genre:</b> {this.props.movie.Genre}\n              </div>\n              <div className=\"extra\">\n                <b>Language:</b> {this.props.movie.Language}\n              </div>\n              <div className=\"extra\">\n                <b>BoxOffice:</b> {this.props.movie.BoxOffice}\n              </div>\n              <div className=\"extra\">\n                <b>Plot:</b> {this.props.movie.Plot}\n              </div>\n              <div className=\"extra\">\n                <b>Runtime:</b> {this.props.movie.Runtime}\n              </div>\n              <div className=\"extra\">\n                <b>Favorite: </b>\n                <i\n                  className={`favorite icon ${favoriteActive}`}\n                  onClick={this.onFavoriteClick}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ movie }) => {\n  return { movie: movie.data };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchMovieDetail }\n)(MovieDetail);\n"]},"metadata":{},"sourceType":"module"}