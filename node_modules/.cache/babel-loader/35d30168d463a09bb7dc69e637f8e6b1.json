{"ast":null,"code":"var _jsxFileName = \"/home/sandovalrd/React project/groupon/src/components/Movies.js\";\nimport React from \"react\";\nimport MoviesList from \"./MoviesList\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, fetchMovieDetail } from \"../actions\";\n\nclass Movies extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectMovie: null\n    };\n\n    this.onMovieSelect = movie => {\n      this.props.fetchMovieDetail(movie.imdbID);\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.movies) {\n      console.log(1);\n      this.props.fetchMovies(\"Batman\"); // Titulo por default\n    } else {\n      console.log(2);\n      this.props.fetchMovies(this.props.movies.Title);\n    }\n  }\n\n  componentDidUpdate() {\n    this.props.fetchMovieDetail(this.props.movies[0].imdbID);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui one column stackable center aligned page grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(MoviesList, {\n      movies: this.props.movies,\n      onMovieSelect: this.onMovieSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  movies\n}) => {\n  return {\n    movies: movies.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovies,\n  fetchMovieDetail\n})(Movies);","map":{"version":3,"sources":["/home/sandovalrd/React project/groupon/src/components/Movies.js"],"names":["React","MoviesList","connect","fetchMovies","fetchMovieDetail","Movies","Component","state","selectMovie","onMovieSelect","movie","props","imdbID","componentDidMount","movies","console","log","Title","componentDidUpdate","render","mapStateToProps","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,YAA9C;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAD2B;;AAAA,SAenCC,aAfmC,GAenBC,KAAK,IAAI;AACvB,WAAKC,KAAL,CAAWP,gBAAX,CAA4BM,KAAK,CAACE,MAAlC;AACD,KAjBkC;AAAA;;AAEnCC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKF,KAAL,CAAWG,MAAhB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,WAAKL,KAAL,CAAWR,WAAX,CAAuB,QAAvB,EAFsB,CAEY;AACnC,KAHD,MAGO;AACLY,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,WAAKL,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWG,MAAX,CAAkBG,KAAzC;AACD;AACF;;AACDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKP,KAAL,CAAWP,gBAAX,CAA4B,KAAKO,KAAL,CAAWG,MAAX,CAAkB,CAAlB,EAAqBF,MAAjD;AACD;;AAMDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWG,MADrB;AAEE,MAAA,aAAa,EAAE,KAAKL,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AA5BkC;;AA+BrC,MAAMW,eAAe,GAAG,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAgB;AACtC,SAAO;AAAEA,IAAAA,MAAM,EAAEA,MAAM,CAACO;AAAjB,GAAP;AACD,CAFD;;AAIA,eAAenB,OAAO,CACpBkB,eADoB,EAEpB;AAAEjB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAFoB,CAAP,CAGbC,MAHa,CAAf","sourcesContent":["import React from \"react\";\nimport MoviesList from \"./MoviesList\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, fetchMovieDetail } from \"../actions\";\n\nclass Movies extends React.Component {\n  state = { selectMovie: null };\n  componentDidMount() {\n    if (!this.props.movies) {\n      console.log(1);\n      this.props.fetchMovies(\"Batman\"); // Titulo por default\n    } else {\n      console.log(2);\n      this.props.fetchMovies(this.props.movies.Title);\n    }\n  }\n  componentDidUpdate() {\n    this.props.fetchMovieDetail(this.props.movies[0].imdbID);\n  }\n\n  onMovieSelect = movie => {\n    this.props.fetchMovieDetail(movie.imdbID);\n  };\n\n  render() {\n    return (\n      <div className=\"ui one column stackable center aligned page grid\">\n        <MoviesList\n          movies={this.props.movies}\n          onMovieSelect={this.onMovieSelect}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ movies }) => {\n  return { movies: movies.data };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchMovies, fetchMovieDetail }\n)(Movies);\n"]},"metadata":{},"sourceType":"module"}