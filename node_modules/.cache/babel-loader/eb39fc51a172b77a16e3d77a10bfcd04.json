{"ast":null,"code":"var _jsxFileName = \"/home/sandovalrd/React project/groupon/src/components/Movies.js\";\nimport React from \"react\";\nimport MoviesList from \"./MoviesList\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, fetchMovieDetail } from \"../actions\";\n\nclass Movies extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectMovie: null\n    };\n\n    this.onMovieSelect = movie => {\n      console.log(movie.imdbID);\n      this.props.fetchMovieDetail(movie.imdbID);\n    };\n\n    this.loadLocalStorage = () => {\n      // Se cargan todas las llaves que existan en localStorage\n      for (let key in this.state) {\n        if (localStorage.hasOwnProperty(key)) {\n          let value = localStorage.getItem(key);\n\n          try {\n            value = JSON.parse(value);\n            this.setState({\n              [key]: value\n            });\n            return value;\n          } catch (e) {\n            this.setState({\n              [key]: value\n            });\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.movies[0]) {\n      this.props.fetchMovies(\"Batman\"); // Titulo por default\n    }\n  }\n\n  componentDidUpdate() {\n    this.props.fetchMovieDetail(this.props.movies[0].imdbID);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui one column stackable center aligned page grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MoviesList, {\n      movies: this.props.movies,\n      onMovieSelect: this.onMovieSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  movies\n}) => {\n  return {\n    movies: movies.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovies,\n  fetchMovieDetail\n})(Movies);","map":{"version":3,"sources":["/home/sandovalrd/React project/groupon/src/components/Movies.js"],"names":["React","MoviesList","connect","fetchMovies","fetchMovieDetail","Movies","Component","state","selectMovie","onMovieSelect","movie","console","log","imdbID","props","loadLocalStorage","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","componentDidMount","movies","componentDidUpdate","render","mapStateToProps","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,YAA9C;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAD2B;;AAAA,SAWnCC,aAXmC,GAWnBC,KAAK,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,WAAKC,KAAL,CAAWV,gBAAX,CAA4BM,KAAK,CAACG,MAAlC;AACD,KAdkC;;AAAA,SAenCE,gBAfmC,GAehB,MAAM;AACvB;AACA,WAAK,IAAIC,GAAT,IAAgB,KAAKT,KAArB,EAA4B;AAC1B,YAAIU,YAAY,CAACC,cAAb,CAA4BF,GAA5B,CAAJ,EAAsC;AACpC,cAAIG,KAAK,GAAGF,YAAY,CAACG,OAAb,CAAqBJ,GAArB,CAAZ;;AACA,cAAI;AACFG,YAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAR;AACA,iBAAKI,QAAL,CAAc;AAAE,eAACP,GAAD,GAAOG;AAAT,aAAd;AACA,mBAAOA,KAAP;AACD,WAJD,CAIE,OAAOK,CAAP,EAAU;AACV,iBAAKD,QAAL,CAAc;AAAE,eAACP,GAAD,GAAOG;AAAT,aAAd;AACD;AACF;AACF;AACF,KA7BkC;AAAA;;AAEnCM,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKX,KAAL,CAAWY,MAAX,CAAkB,CAAlB,CAAL,EAA2B;AACzB,WAAKZ,KAAL,CAAWX,WAAX,CAAuB,QAAvB,EADyB,CACS;AACnC;AACF;;AACDwB,EAAAA,kBAAkB,GAAG;AACnB,SAAKb,KAAL,CAAWV,gBAAX,CAA4B,KAAKU,KAAL,CAAWY,MAAX,CAAkB,CAAlB,EAAqBb,MAAjD;AACD;;AAqBDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWY,MADrB;AAEE,MAAA,aAAa,EAAE,KAAKjB,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AAvCkC;;AA0CrC,MAAMoB,eAAe,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAgB;AACtC,SAAO;AAAEA,IAAAA,MAAM,EAAEA,MAAM,CAACI;AAAjB,GAAP;AACD,CAFD;;AAIA,eAAe5B,OAAO,CACpB2B,eADoB,EAEpB;AAAE1B,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAFoB,CAAP,CAGbC,MAHa,CAAf","sourcesContent":["import React from \"react\";\nimport MoviesList from \"./MoviesList\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, fetchMovieDetail } from \"../actions\";\n\nclass Movies extends React.Component {\n  state = { selectMovie: null };\n  componentDidMount() {\n    if (!this.props.movies[0]) {\n      this.props.fetchMovies(\"Batman\"); // Titulo por default\n    }\n  }\n  componentDidUpdate() {\n    this.props.fetchMovieDetail(this.props.movies[0].imdbID);\n  }\n\n  onMovieSelect = movie => {\n    console.log(movie.imdbID);\n    this.props.fetchMovieDetail(movie.imdbID);\n  };\n  loadLocalStorage = () => {\n    // Se cargan todas las llaves que existan en localStorage\n    for (let key in this.state) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n          return value;\n        } catch (e) {\n          this.setState({ [key]: value });\n        }\n      }\n    }\n  };\n  render() {\n    return (\n      <div className=\"ui one column stackable center aligned page grid\">\n        <MoviesList\n          movies={this.props.movies}\n          onMovieSelect={this.onMovieSelect}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ movies }) => {\n  return { movies: movies.data };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchMovies, fetchMovieDetail }\n)(Movies);\n"]},"metadata":{},"sourceType":"module"}